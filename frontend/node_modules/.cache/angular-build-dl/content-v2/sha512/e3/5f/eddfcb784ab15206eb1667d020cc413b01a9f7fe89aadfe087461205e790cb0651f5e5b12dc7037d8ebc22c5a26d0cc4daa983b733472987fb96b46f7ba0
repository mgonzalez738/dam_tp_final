{"version":3,"sources":["./src/app/medicion/medicion.page.html","./src/app/medicion/medicion-routing.module.ts","./src/app/medicion/medicion.module.ts","./src/app/medicion/medicion.page.scss","./src/app/medicion/medicion.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,ygCAA08B,sBAAsB,2GAA2G,4CAA4C,mHAAmH,iBAAiB,mPAAmP,E;;;;;;;;;;;;;;;;;;;ACAp9C;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kFAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACnB/B;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;;;;;;;;;;ACAtJ;AACD;AAGoB;AAEF;IAOtD,YAAY,SAAZ,YAAY;IAKvB,YACU,MAAqB,EACtB,eAAkC,EAClC,kBAAsC;QAFrC,WAAM,GAAN,MAAM,CAAe;QACtB,oBAAe,GAAf,eAAe,CAAmB;QAClC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC7C,CAAC;IAEG,QAAQ;;YACZ,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI;gBACF,IAAI,CAAC,WAAW,IAAgB,MAAM,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,EAAC;gBAC7E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC9B,IAAI,CAAC,UAAU,IAAe,MAAM,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAC;aACtG;YACF,OAAM,KAAK,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC;KAAA;IAAA,CAAC;IAEI,kBAAkB,CAAC,EAAE;;YAEzB,IAAI;gBACF,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;aACzD;YACD,OAAO,KAAK,EAAE;gBACZ,MAAM,KAAK,CAAC;aACb;QACH,CAAC;KAAA;IAEK,4BAA4B,CAAC,EAAE;;YAEnC,IAAI;gBACF,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,iCAAiC,CAAC,EAAE,CAAC,CAAC;aACzE;YACD,OAAO,KAAK,EAAE;gBACZ,MAAM,KAAK,CAAC;aACb;QACH,CAAC;KAAA;CAGF;;YAxDQ,8DAAc;YAKd,8EAAiB;YAFjB,gFAAkB;;AASd,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0NAAmC;;KAEpC,CAAC;GACW,YAAY,CA4CxB;AA5CwB","file":"medicion-medicion-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-grid class =\\\"ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col size-sm=\\\"9\\\" offset-sm=\\\"1.5\\\" size-md=\\\"6\\\" offset-md=\\\"3\\\" size-lg=\\\"4\\\" offset-lg=\\\"4\\\" size-xl=\\\"3\\\" offset-lg=\\\"4.5\\\">\\n        <ion-toolbar color = \\\"primary\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n          </ion-buttons>\\n          <ion-title>Mediciones</ion-title>\\n        </ion-toolbar>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-sm=\\\"9\\\" offset-sm=\\\"1.5\\\" size-md=\\\"6\\\" offset-md=\\\"3\\\" size-lg=\\\"4\\\" offset-lg=\\\"4\\\" size-xl=\\\"3\\\" offset-lg=\\\"4.5\\\">\\n        <ion-list>\\n          <ion-item *ngFor=\\\"let medicion of mediciones\\\">\\n            <ion-label>\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col size=\\\"3\\\">\\n                      <p>Id: {{medicion.medicionId }}</p>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\">\\n                      <p>{{medicion.fecha | date:'dd/MM/yy HH:mm:ss' }}</p>\\n                    </ion-col>\\n                    <ion-col size=\\\"3\\\">\\n                      <p>Valor = {{medicion.valor }}</p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n            </ion-label>\\n          </ion-item>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n    \\n  </ion-grid>\\n</ion-content>\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MedicionPage } from './medicion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MedicionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MedicionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MedicionPageRoutingModule } from './medicion-routing.module';\n\nimport { MedicionPage } from './medicion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MedicionPageRoutingModule\n  ],\n  declarations: [MedicionPage]\n})\nexport class MedicionPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lZGljaW9uL21lZGljaW9uLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Dispositivo } from '../models/dispositivo.model';\nimport { DispositivoService } from '../services/dispositivo.service';\nimport { Medicion } from '../models/medicion.model';\nimport { MedicionesService } from '../services/mediciones.service';\n\n@Component({\n  selector: 'app-medicion',\n  templateUrl: './medicion.page.html',\n  styleUrls: ['./medicion.page.scss'],\n})\nexport class MedicionPage implements OnInit {\n\n  public dispositivo: Dispositivo;\n  public mediciones: Medicion[];\n\n  constructor (\n    private router:ActivatedRoute,\n    public medicionService: MedicionesService,\n    public dispositivoService: DispositivoService) \n  { }\n\n  async ngOnInit() {\n    let idDispositivo = this.router.snapshot.paramMap.get('id');    \n    try {\n      this.dispositivo = <Dispositivo>await this.GetDispositivoById(idDispositivo);\n      console.log(this.dispositivo);\n      this.mediciones = <Medicion[]>await this.GetMedicionesByDispositivoId(this.dispositivo.dispositivoId);\n     }\n    catch(error) {\n      console.log(error);\n    }   \n  };\n\n  async GetDispositivoById(id)\n  {\n    try {\n      return await this.dispositivoService.getDispositivo(id);\n    }\n    catch (error) {\n      throw error;\n    }\n  }\n\n  async GetMedicionesByDispositivoId(id)\n  {\n    try {\n      return await this.medicionService.getListadoMedicionByDispositivoId(id);\n    }\n    catch (error) {\n      throw error;\n    }\n  }\n  \n\n}\n"],"sourceRoot":"webpack:///"}