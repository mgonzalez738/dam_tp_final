{"version":3,"sources":["webpack:///src/app/log-riego/log-riego.page.html","webpack:///src/app/directives/valve-color.directive.ts","webpack:///src/app/log-riego/log-riego-routing.module.ts","webpack:///src/app/log-riego/log-riego.module.ts","webpack:///src/app/log-riego/log-riego.page.scss","webpack:///src/app/log-riego/log-riego.page.ts","webpack:///src/app/pipes/valvestate.pipe.ts"],"names":["ValveColorDirective","el","textColor","appValveColor","state","nativeElement","style","color","selector","routes","path","component","LogRiegoPageRoutingModule","imports","forChild","exports","LogRiegoPageModule","declarations","LogRiegoPage","router","logRiegoService","dispositivoService","idDispositivo","snapshot","paramMap","get","GetDispositivoById","dispositivo","console","log","GetLogsRiegoByElectrovalvulaId","electrovalvulaId","logsRiego","id","getDispositivo","getListadoLogRiegoByElectrovalvulaId","template","ValveStatePipe","value","name"],"mappings":"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","file":"log-riego-log-riego-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-grid class =\\\"ion-no-padding\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size-sm=\\\"9\\\" offset-sm=\\\"1.5\\\" size-md=\\\"6\\\" offset-md=\\\"3\\\" size-lg=\\\"4\\\" offset-lg=\\\"4\\\" size-xl=\\\"3\\\" offset-lg=\\\"4.5\\\">\\r\\n        <ion-toolbar color = \\\"primary\\\">\\r\\n          <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button defaultHref=\\\"/home/dispositivo/{{dispositivo?.dispositivoId}}\\\"></ion-back-button>\\r\\n          </ion-buttons>\\r\\n          <ion-title>Logs Riego</ion-title>\\r\\n        </ion-toolbar>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size-sm=\\\"9\\\" offset-sm=\\\"1.5\\\" size-md=\\\"6\\\" offset-md=\\\"3\\\" size-lg=\\\"4\\\" offset-lg=\\\"4\\\" size-xl=\\\"3\\\" offset-lg=\\\"4.5\\\">\\r\\n        <ion-list>\\r\\n          <ion-item *ngFor=\\\"let log of logsRiego\\\">\\r\\n            <ion-label>\\r\\n                <ion-grid>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"3\\\">\\r\\n                      <p>Id: {{log.logRiegoId }}</p>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"6\\\">\\r\\n                      <p>{{log.fecha | date:'dd/MM/yy HH:mm:ss' }}</p>\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"3\\\">\\r\\n                      <p [appValveColor]= \\\"log?.apertura\\\"> {{ log?.apertura | valveState}}</p>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    \\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\\r\\n\";","import { Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appValveColor]'\r\n})\r\nexport class ValveColorDirective {\r\n\r\n  @Input() appValveColor: number;\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.textColor(this.appValveColor);\r\n }\r\n\r\n  private textColor(state: number) {\r\n    if(state == 1)\r\n      this.el.nativeElement.style.color = 'blue';\r\n    else\r\n      this.el.nativeElement.style.color = 'green';\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LogRiegoPage } from './log-riego.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogRiegoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogRiegoPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LogRiegoPageRoutingModule } from './log-riego-routing.module';\r\n\r\nimport { LogRiegoPage } from './log-riego.page';\r\nimport { ValveStatePipe } from '../pipes/valvestate.pipe';\r\nimport { ValveColorDirective } from '../directives/valve-color.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LogRiegoPageRoutingModule\r\n  ],\r\n  declarations: [LogRiegoPage, ValveStatePipe, ValveColorDirective]\r\n})\r\nexport class LogRiegoPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1yaWVnby9sb2ctcmllZ28ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Dispositivo } from '../models/dispositivo.model';\r\nimport { DispositivoService } from '../services/dispositivo.service';\r\nimport { LogRiego } from '../models/logRiego.model';\r\nimport { LogRiegoService } from '../services/logRiego.service';\r\n\r\n@Component({\r\n  selector: 'app-log-riego',\r\n  templateUrl: './log-riego.page.html',\r\n  styleUrls: ['./log-riego.page.scss'],\r\n})\r\nexport class LogRiegoPage implements OnInit {\r\n\r\n  public dispositivo: Dispositivo;\r\n  public logsRiego: LogRiego[];\r\n\r\n  constructor (\r\n    private router:ActivatedRoute,\r\n    public logRiegoService:LogRiegoService,\r\n    public dispositivoService: DispositivoService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    let idDispositivo = this.router.snapshot.paramMap.get('id');    \r\n    try {\r\n      this.dispositivo = <Dispositivo>await this.GetDispositivoById(idDispositivo);\r\n      console.log(this.dispositivo);\r\n      this.logsRiego = <LogRiego[]>await this.GetLogsRiegoByElectrovalvulaId(this.dispositivo.electrovalvulaId);\r\n     }\r\n    catch(error) {\r\n      console.log(error);\r\n    }   \r\n  };\r\n\r\n  async GetDispositivoById(id)\r\n  {\r\n    try {\r\n      return await this.dispositivoService.getDispositivo(id);\r\n    }\r\n    catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async GetLogsRiegoByElectrovalvulaId(id)\r\n  {\r\n    try {\r\n      return await this.logRiegoService.getListadoLogRiegoByElectrovalvulaId(id);\r\n    }\r\n    catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'valveState'\r\n})\r\nexport class ValveStatePipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    if(value==0)\r\n      return \"Cierre\";\r\n    else if(value==1)\r\n      return \"Apertura\";\r\n    else\r\n      return \"Error\";\r\n  }\r\n\r\n}\r\n"]}