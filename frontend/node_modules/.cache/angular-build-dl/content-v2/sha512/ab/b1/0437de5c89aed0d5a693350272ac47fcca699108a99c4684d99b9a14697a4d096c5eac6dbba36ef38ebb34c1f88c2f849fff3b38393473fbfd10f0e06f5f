{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-0d5784f9.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/services/logRiego.service.ts","./src/app/services/mediciones.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;ACzC1C;AACO;IAOrC,eAAe,SAAf,eAAe;IAI1B,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAF7B,WAAM,GAAC,uBAAuB,CAAC;IAEE,CAAC;IAE1C,oCAAoC,CAAC,EAAE;QACrC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,mCAAmC,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,eAA0B,EAAC,EAAE;YAC1H,OAAO,eAAe,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAiC,CAAC,EAAE;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,mCAAmC,EAAE,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,eAA0B,EAAC,EAAE;YAChI,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IAEF,UAAU,CAAC,OAAc,EAAE,MAAa;QACtC,MAAM,IAAI,GAAI;YACX,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC3B,QAAQ,EAAE,MAAM;YAChB,gBAAgB,EAAE,OAAO;SAC1B,CAAC;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAU,EAAC,EAAE;YACzF,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAnCQ,+DAAU;;AAON,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA4B3B;AA5B2B;;;;;;;;;;;;;;;;;;;ACRe;AACO;IAMrC,iBAAiB,SAAjB,iBAAiB;IAI5B,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAF7B,WAAM,GAAC,uBAAuB,CAAC;IAEE,CAAC;IAE1C,iCAAiC,CAAC,EAAE;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,iCAAiC,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,eAA0B,EAAC,EAAE;YACxH,OAAO,eAAe,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAA8B,CAAC,EAAE;QAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,iCAAiC,EAAE,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,eAA0B,EAAC,EAAE;YAC9H,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IAEF,iBAAiB,CAAC,aAAoB,EAAE,KAAY;QAClD,MAAM,IAAI,GAAI;YACX,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC3B,KAAK,EAAE,KAAK;YACZ,aAAa,EAAE,aAAa;SAC7B,CAAC;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAU,EAAC,EAAE;YAC1F,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAnCQ,+DAAU;;AAMN,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CA6B7B;AA7B6B","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-44bf8136.js';\r\nimport { createGesture } from './index-eea61379.js';\r\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\r\n\r\nconst createButtonActiveGesture = (el, isButton) => {\r\n    let currentTouchedButton;\r\n    let initialTouchedButton;\r\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\r\n        if (typeof document === 'undefined') {\r\n            return;\r\n        }\r\n        const target = document.elementFromPoint(x, y);\r\n        if (!target || !isButton(target)) {\r\n            clearActiveButton();\r\n            return;\r\n        }\r\n        if (target !== currentTouchedButton) {\r\n            clearActiveButton();\r\n            setActiveButton(target, hapticFeedbackFn);\r\n        }\r\n    };\r\n    const setActiveButton = (button, hapticFeedbackFn) => {\r\n        currentTouchedButton = button;\r\n        if (!initialTouchedButton) {\r\n            initialTouchedButton = currentTouchedButton;\r\n        }\r\n        const buttonToModify = currentTouchedButton;\r\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\r\n        hapticFeedbackFn();\r\n    };\r\n    const clearActiveButton = (dispatchClick = false) => {\r\n        if (!currentTouchedButton) {\r\n            return;\r\n        }\r\n        const buttonToModify = currentTouchedButton;\r\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\r\n        /**\r\n         * Clicking on one button, but releasing on another button\r\n         * does not dispatch a click event in browsers, so we\r\n         * need to do it manually here. Some browsers will\r\n         * dispatch a click if clicking on one button, dragging over\r\n         * another button, and releasing on the original button. In that\r\n         * case, we need to make sure we do not cause a double click there.\r\n         */\r\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\r\n            currentTouchedButton.click();\r\n        }\r\n        currentTouchedButton = undefined;\r\n    };\r\n    return createGesture({\r\n        el,\r\n        gestureName: 'buttonActiveDrag',\r\n        threshold: 0,\r\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\r\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\r\n        onEnd: () => {\r\n            clearActiveButton(true);\r\n            hapticSelectionEnd();\r\n            initialTouchedButton = undefined;\r\n        }\r\n    });\r\n};\r\n\r\nexport { createButtonActiveGesture as c };\r\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\r\n\r\nexport { attachComponent as a, detachComponent as d };\r\n","const HapticEngine = {\r\n    getEngine() {\r\n        const win = window;\r\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\r\n    },\r\n    available() {\r\n        return !!this.getEngine();\r\n    },\r\n    isCordova() {\r\n        return !!window.TapticEngine;\r\n    },\r\n    isCapacitor() {\r\n        const win = window;\r\n        return !!win.Capacitor;\r\n    },\r\n    impact(options) {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n        engine.impact({ style });\r\n    },\r\n    notification(options) {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n        engine.notification({ style });\r\n    },\r\n    selection() {\r\n        this.impact({ style: 'light' });\r\n    },\r\n    selectionStart() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionStart();\r\n        }\r\n        else {\r\n            engine.gestureSelectionStart();\r\n        }\r\n    },\r\n    selectionChanged() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionChanged();\r\n        }\r\n        else {\r\n            engine.gestureSelectionChanged();\r\n        }\r\n    },\r\n    selectionEnd() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionEnd();\r\n        }\r\n        else {\r\n            engine.gestureSelectionEnd();\r\n        }\r\n    }\r\n};\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    HapticEngine.selection();\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    HapticEngine.selectionStart();\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    HapticEngine.selectionChanged();\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    HapticEngine.selectionEnd();\r\n};\r\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\r\n */\r\nconst hapticImpact = (options) => {\r\n    HapticEngine.impact(options);\r\n};\r\n\r\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\r\n","const spinners = {\r\n    'bubbles': {\r\n        dur: 1000,\r\n        circles: 9,\r\n        fn: (dur, index, total) => {\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            const angle = 2 * Math.PI * index / total;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circles': {\r\n        dur: 1000,\r\n        circles: 8,\r\n        fn: (dur, index, total) => {\r\n            const step = index / total;\r\n            const animationDelay = `${(dur * step) - dur}ms`;\r\n            const angle = 2 * Math.PI * step;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circular': {\r\n        dur: 1400,\r\n        elmDuration: true,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 20,\r\n                cx: 48,\r\n                cy: 48,\r\n                fill: 'none',\r\n                viewBox: '24 24 48 48',\r\n                transform: 'translate(0,0)',\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'crescent': {\r\n        dur: 750,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 26,\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'dots': {\r\n        dur: 750,\r\n        circles: 3,\r\n        fn: (_, index) => {\r\n            const animationDelay = -(110 * index) + 'ms';\r\n            return {\r\n                r: 6,\r\n                style: {\r\n                    'left': `${9 - (9 * index)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 17,\r\n                y2: 29,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines-small': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 12,\r\n                y2: 20,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nconst SPINNERS = spinners;\r\n\r\nexport { SPINNERS as S };\r\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction, animation) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction, animation);\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { LogRiego } from '../models/logRiego.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogRiegoService {\r\n  \r\n  private urlApi=\"http://localhost:3000\";\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getListadoLogRiegoByElectrovalvulaId(id):Promise<LogRiego[]>{\r\n    return this._http.get(this.urlApi + `/api/logRiegos?electrovalvulaId=${id}`).toPromise().then((listingLogRiego:LogRiego[])=>{\r\n      return listingLogRiego;\r\n    });\r\n  }\r\n \r\n  getLastLogRiegoByElectrovalvulaId(id):Promise<LogRiego>{     \r\n    return this._http.get(this.urlApi+`/api/logRiegos?electrovalvulaId=${id}&limit=1`).toPromise().then((listingLogRiego:LogRiego[])=>{\r\n      return listingLogRiego[0];\r\n    });\r\n  };\r\n\r\n  postNewLog(valveId:number, status:number):Promise<Object>{\r\n    const data =  {\r\n       fecha: new Date(Date.now()),\r\n       apertura: status,\r\n       electrovalvulaId: valveId\r\n     };\r\n     return this._http.post(this.urlApi+`/api/logRiegos`, data).toPromise().then((res:Object)=>{\r\n      return res;\r\n    });  \r\n  }  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Medicion } from '../models/medicion.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicionesService {\r\n\r\n  private urlApi=\"http://localhost:3000\";\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getListadoMedicionByDispositivoId(id):Promise<Medicion[]>{\r\n    return this._http.get(this.urlApi + `/api/mediciones?dispositivoId=${id}`).toPromise().then((listingMedicion:Medicion[])=>{\r\n      return listingMedicion;\r\n    });\r\n  }\r\n \r\n  getLastMedicionByDispositivoId(id):Promise<Medicion>{     \r\n    return this._http.get(this.urlApi+`/api/mediciones?dispositivoId=${id}&limit=1`).toPromise().then((listingMedicion:Medicion[])=>{\r\n      return listingMedicion[0];\r\n    });\r\n  };\r\n\r\n  postNuevaMedicion(dispositivoId:number, valor:number):Promise<Object>{\r\n    const data =  {\r\n       fecha: new Date(Date.now()),\r\n       valor: valor,\r\n       dispositivoId: dispositivoId\r\n     };\r\n     return this._http.post(this.urlApi+`/api/mediciones`, data).toPromise().then((res:Object)=>{\r\n      return res;\r\n    });  \r\n  }  \r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}